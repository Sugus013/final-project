[{"C:\\Users\\AWOTOLA PETER\\Desktop\\Mern-Auth\\client\\src\\App.js":"1","C:\\Users\\AWOTOLA PETER\\Desktop\\Mern-Auth\\client\\src\\index.js":"2","C:\\Users\\AWOTOLA PETER\\Desktop\\Mern-Auth\\client\\src\\reducers\\user.js":"3","C:\\Users\\AWOTOLA PETER\\Desktop\\Mern-Auth\\client\\src\\actions\\user.js":"4","C:\\Users\\AWOTOLA PETER\\Desktop\\Mern-Auth\\client\\src\\components\\registerComponent.js":"5"},{"size":288,"mtime":1606289463834,"results":"6","hashOfConfig":"7"},{"size":286,"mtime":1606290176168,"results":"8","hashOfConfig":"7"},{"size":1243,"mtime":1606220488137,"results":"9","hashOfConfig":"7"},{"size":994,"mtime":1606295621048,"results":"10","hashOfConfig":"7"},{"size":3728,"mtime":1606295351414,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19qluq2",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},"C:\\Users\\AWOTOLA PETER\\Desktop\\Mern-Auth\\client\\src\\App.js",[],"C:\\Users\\AWOTOLA PETER\\Desktop\\Mern-Auth\\client\\src\\index.js",[],["24","25"],"C:\\Users\\AWOTOLA PETER\\Desktop\\Mern-Auth\\client\\src\\reducers\\user.js",[],"C:\\Users\\AWOTOLA PETER\\Desktop\\Mern-Auth\\client\\src\\actions\\user.js",[],"C:\\Users\\AWOTOLA PETER\\Desktop\\Mern-Auth\\client\\src\\components\\registerComponent.js",["26","27","28","29","30","31","32","33","34"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { register } from \"../actions/user\";\r\n\r\nconst RegisterComponent = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [errorMsg, setErrorMsg] = useState({ username: \"\", email: \"\", password: \"\" });\r\n  const [registerStep, setRegisterStep] = useState(\"register\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(register(username, email, password));\r\n  };\r\n\r\n  const resendEmail = () => {};\r\n\r\n  const resetAccount = () => {};\r\n\r\n  function renderSwitch() {\r\n    switch (registerStep) {\r\n      case \"register\":\r\n        return (\r\n          <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"form\">\r\n              <div className=\"field\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <input\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  placeholder=\"Username\"\r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"field\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </div>\r\n              <button type=\"submit\">Signup</button>\r\n              {message && <div>{message}</div>}\r\n            </form>\r\n          </div>\r\n        );\r\n      case \"resend\":\r\n        return (\r\n          <div className=\"container\">\r\n            <p>A verification email has been sent.</p>\r\n            <p>Check you mailbox : {email}.</p>\r\n            <p>\r\n              You have 12 hours to activate your account. It can take up to 15\r\n              min to receive our email.\r\n            </p>\r\n            <button onClick={resendEmail}>\r\n              Did not receive the email? Click here to send again.\r\n            </button>\r\n            {message && <div>{message}</div>}\r\n          </div>\r\n        );\r\n\r\n      case \"reset\":\r\n        return (\r\n          <div className=\"container\">\r\n            <p>Still not received an email? </p>\r\n            <p>Try to register again. You may have given the wrong email. </p>\r\n            <p>\r\n              If you want to be able to use the same username, reset the\r\n              registration :\r\n            </p>\r\n            <button onClick={resetAccount}>\r\n              Click here to reset the registration\r\n            </button>\r\n            {message && <div>{message}</div>}\r\n          </div>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {renderSwitch()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterComponent;\r\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":27,"nodeType":"41","messageId":"42","endLine":1,"endColumn":36},{"ruleId":"39","severity":1,"message":"43","line":2,"column":10,"nodeType":"41","messageId":"42","endLine":2,"endColumn":14},{"ruleId":"39","severity":1,"message":"44","line":10,"column":19,"nodeType":"41","messageId":"42","endLine":10,"endColumn":29},{"ruleId":"39","severity":1,"message":"45","line":11,"column":10,"nodeType":"41","messageId":"42","endLine":11,"endColumn":18},{"ruleId":"39","severity":1,"message":"46","line":11,"column":20,"nodeType":"41","messageId":"42","endLine":11,"endColumn":31},{"ruleId":"39","severity":1,"message":"47","line":12,"column":24,"nodeType":"41","messageId":"42","endLine":12,"endColumn":39},{"ruleId":"39","severity":1,"message":"48","line":17,"column":11,"nodeType":"41","messageId":"42","endLine":17,"endColumn":18},{"ruleId":"39","severity":1,"message":"49","line":17,"column":20,"nodeType":"41","messageId":"42","endLine":17,"endColumn":25},{"ruleId":"39","severity":1,"message":"50","line":17,"column":27,"nodeType":"41","messageId":"42","endLine":17,"endColumn":35},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'setMessage' is assigned a value but never used.","'errorMsg' is assigned a value but never used.","'setErrorMsg' is assigned a value but never used.","'setRegisterStep' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'userInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]